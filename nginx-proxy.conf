server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com localhost; # <-- ADJUST to your actual domain(s) or IP

    # Optional: Redirect HTTP to HTTPS (uncomment if you set up SSL below)
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # }

    location /api/ {
        # Forward requests to the backend service (Flask/Gunicorn)
        # 'backend' is the service name defined in docker-compose.yml
        # Docker's internal DNS resolves 'backend' to the backend container's IP
        proxy_pass http://backend:5000; # Gunicorn runs on port 5000 inside its container

        # Set headers to pass necessary info to the backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location / {
        # Forward all other requests to the frontend service (React/Nginx)
        # 'frontend' is the service name defined in docker-compose.yml
        # Docker's internal DNS resolves 'frontend' to the frontend container's IP
        proxy_pass http://frontend:80; # Nginx runs on port 80 inside the frontend container

        # Set headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    # Optional: Add settings for handling large uploads if needed
    # client_max_body_size 100M;

    # Optional: Basic security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always; # Adjust CSP as needed

    # Prevent Nginx version disclosure
    server_tokens off;
}

# Optional: Add server block for HTTPS (Port 443) if you have SSL certificates
# server {
#     listen 443 ssl http2;
#     server_name yourdomain.com www.yourdomain.com; # <-- ADJUST
#
#     ssl_certificate /etc/nginx/certs/fullchain.pem; # <-- Path inside container (mounted via volume)
#     ssl_certificate_key /etc/nginx/certs/privkey.pem; # <-- Path inside container (mounted via volume)
#     include /etc/nginx/options-ssl-nginx.conf; # Optional: Include standard SSL options
#     ssl_dhparam /etc/nginx/certs/ssl-dhparams.pem; # Optional: Include DH params
#
#     # Proxy locations are the same as the HTTP block
#     location /api/ {
#         proxy_pass http://backend:5000;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }
#
#     location / {
#         proxy_pass http://frontend:80;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_redirect off;
#     }
#
#     # Add security headers etc. as in the HTTP block
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     # ... other headers ...
#     server_tokens off;
# }